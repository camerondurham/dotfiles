#!/usr/bin/env zsh
#: vi set ft=sh

# Add ZLE widgets

function _git-status () {
    zle -U "git status"
    zle accept-line
}

zle -N _git-status
bindkey '\eg' _git-status

[ -f "${DOTFILES}/colors" ] && source "${DOTFILES}/colors"

# zle -N zle-line-init
# zle -N zle-keymap-select

vim_prompt() {
  if [ ! -z $VIMRUNTIME ]; then
    echo ":%F{green}sh ";
  fi
}


#   Simple git prompt sets if there are changes in your
# branch (sets a green dot) or the number of modified
# files + if there are untracked files.
# I forgot where I got this originally but will try to credit!

git_prompt() {
  BRANCH=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/*\(.*\)/\1/')

  # 140 is light magenta
  if [ ! -z $BRANCH ]; then
    echo -n "%F{$GIT_BRANCH_COLOR}$BRANCH"

    if [ ! -z "$(git status --short)" ]; then
        STAGED=$(git status | egrep -c "(modified)|(deleted)|(renamed)|(new file)|(Untracked)")
        # 146 is light grey/blueish
        echo " %F{$GIT_CHANGED_COLOR}● %F{$GIT_STAGED_COLOR}($STAGED)"
          else
              echo " %F{$GIT_CLEAN_COLOR}●"
    fi
  fi
}

#PS1='
#$(vim_prompt)%B%F{159}%~$(git_prompt)
#%B%F{141}$PRETTY_PROMPT_CHAR %F{reset}'

PS1='
$(vim_prompt)%B%F{$DIR_COLOR}%~$(git_prompt)
%B%F{$PROMPT_COLOR}$PRETTY_PROMPT_CHAR %F{reset}'

# Configure keybindings

bindkey -M viins '^B' vi-backward-char
bindkey -M viins '^P' vi-up-line-or-history
bindkey -M viins '^N' vi-down-line-or-history
bindkey -M viins '^E' vi-end-of-line
bindkey -M viins '^A' vi-beginning-of-line
bindkey -M viins '^R' history-incremental-search-backward
bindkey -M viins '^K' vi-kill-eol
bindkey -M viins '^U' backward-kill-line
bindkey -M viins '^Y' vi-put-after
bindkey -M viins '^T' transpose-chars
bindkey -M viins '^F' autosuggest-accept

bindkey -M viins '\et' transpose-words
bindkey -M viins '\eu' vi-up-case
bindkey -M viins '\el' vi-down-case
bindkey -M viins '\ec' capitalize-word
bindkey -M viins '\e.' vi-yank
bindkey -M viins '\ef' vi-forward-word
bindkey -M viins '\eb' vi-backward-word

function custom-vi-cmd-mode {
  zle vi-cmd-mode
  zle vi-forward-char
}
zle -N custom-vi-cmd-mode
bindkey -M viins '\\j' custom-vi-cmd-mode

# [ Enter the command line with `⌥ v` ]
autoload -Uz edit-command-line
bindkey -M viins '\ev' edit-command-line
bindkey -M vicmd '\ev' edit-command-line
zle -N edit-command-line
